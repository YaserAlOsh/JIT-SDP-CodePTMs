,commit_id,full_info
0,7b8480744ea6e6fb41efd4329bb470c8f3c763db,"{'sha': '7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'node_id': 'MDY6Q29tbWl0MzQwMzk2OTA6N2I4NDgwNzQ0ZWE2ZTZmYjQxZWZkNDMyOWJiNDcwYzhmM2M3NjNkYg==', 'commit': {'author': {'name': 'James Strachan', 'email': 'jastrachan@mac.com', 'date': '2003-12-02T09:00:53Z'}, 'committer': {'name': 'James Strachan', 'email': 'jastrachan@mac.com', 'date': '2003-12-02T09:00:53Z'}, 'message': 'Added the front end parsing for switch, throw, break, continue and synchronize\n\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@341 a5544e8c-8a19-0410-ba12-f9af4593a198', 'tree': {'sha': 'ac6791cbaa6f640a35fe3756f4a0484a1b6e2ed0', 'url': 'https://api.github.com/repos/apache/groovy/git/trees/ac6791cbaa6f640a35fe3756f4a0484a1b6e2ed0'}, 'url': 'https://api.github.com/repos/apache/groovy/git/commits/7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'comment_count': 0, 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None}}, 'url': 'https://api.github.com/repos/apache/groovy/commits/7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'html_url': 'https://github.com/apache/groovy/commit/7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'comments_url': 'https://api.github.com/repos/apache/groovy/commits/7b8480744ea6e6fb41efd4329bb470c8f3c763db/comments', 'author': {'login': 'jstrachan', 'id': 30140, 'node_id': 'MDQ6VXNlcjMwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jstrachan', 'html_url': 'https://github.com/jstrachan', 'followers_url': 'https://api.github.com/users/jstrachan/followers', 'following_url': 'https://api.github.com/users/jstrachan/following{/other_user}', 'gists_url': 'https://api.github.com/users/jstrachan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jstrachan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jstrachan/subscriptions', 'organizations_url': 'https://api.github.com/users/jstrachan/orgs', 'repos_url': 'https://api.github.com/users/jstrachan/repos', 'events_url': 'https://api.github.com/users/jstrachan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jstrachan/received_events', 'type': 'User', 'site_admin': False}, 'committer': {'login': 'jstrachan', 'id': 30140, 'node_id': 'MDQ6VXNlcjMwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jstrachan', 'html_url': 'https://github.com/jstrachan', 'followers_url': 'https://api.github.com/users/jstrachan/followers', 'following_url': 'https://api.github.com/users/jstrachan/following{/other_user}', 'gists_url': 'https://api.github.com/users/jstrachan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jstrachan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jstrachan/subscriptions', 'organizations_url': 'https://api.github.com/users/jstrachan/orgs', 'repos_url': 'https://api.github.com/users/jstrachan/repos', 'events_url': 'https://api.github.com/users/jstrachan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jstrachan/received_events', 'type': 'User', 'site_admin': False}, 'parents': [{'sha': '891443950f9204379a5b265a373fd18584a6a921', 'url': 'https://api.github.com/repos/apache/groovy/commits/891443950f9204379a5b265a373fd18584a6a921', 'html_url': 'https://github.com/apache/groovy/commit/891443950f9204379a5b265a373fd18584a6a921'}], 'stats': {'total': 395, 'additions': 372, 'deletions': 23}, 'files': [{'sha': '4ebdf0f9fd6b7679b07c68345fbd98f8aca73048', 'filename': '.classpath', 'status': 'modified', 'additions': 40, 'deletions': 7, 'changes': 47, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/.classpath', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/.classpath', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/.classpath?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -1,9 +1,42 @@\n <?xml version=""1.0"" encoding=""UTF-8""?>\n+\n <classpath>\n-    <classpathentry kind=""src"" path=""src/main""/>\n-    <classpathentry kind=""src"" path=""src/test""/>\n-    <classpathentry kind=""var"" path=""JRE_LIB"" sourcepath=""JRE_SRC""/>\n-    <classpathentry kind=""lib"" path=""target/test-classes""/>\n-    <classpathentry kind=""src"" path=""/MAVEN_REPO""/>\n-    <classpathentry kind=""output"" path=""bin""/>\n-</classpath>\n+  <classpathentry kind=""src"" path=""src/main"">\n+  </classpathentry>\n+  <classpathentry output=""target/test-classes"" kind=""src"" path=""src/test"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/junit/jars/junit-3.8.1.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" rootpath=""JRE_SRCROOT"" path=""JRE_LIB"" sourcepath=""JRE_SRC"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/xerces/jars/xerces-2.4.0.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/xml-apis/jars/xml-apis-1.0.b2.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/commons-logging/jars/commons-logging-1.0.3.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/asm/jars/asm-1.3.4.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/classworlds/jars/classworlds-1.0-rc2.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/commons-cli/jars/commons-cli-1.0.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/ant/jars/ant-1.5.2.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/asm/jars/asm-util-1.3.4.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/bsf/jars/bsf-2.3.0-rc1.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/mx4j/jars/mx4j-SNAPSHOT.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/mockobjects/jars/mockobjects-core-0.09.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/openejb/jars/openejb-loader-0.9.2.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/axion/jars/axion-1.0-M3-dev.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""var"" path=""MAVEN_REPO/servletapi/jars/servletapi-2.3.jar"">\n+  </classpathentry>\n+  <classpathentry kind=""output"" path=""bin"">\n+  </classpathentry>\n+</classpath>\n\\ No newline at end of file'}, {'sha': '9e442b4f3c4722331b0c3b931b96120597143b78', 'filename': '.project', 'status': 'modified', 'additions': 16, 'deletions': 16, 'changes': 32, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/.project', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/.project', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/.project?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -1,18 +1,18 @@\n <?xml version=""1.0"" encoding=""UTF-8""?>\n+\n <projectDescription>\n-\t<name>groovy-core</name>\n-\t<comment>hybrid language for the JVM.</comment>\n-\t<projects>\n-\t\t<project>MAVEN_REPO</project>\n-\t</projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t</buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n-\t</natures>\n-</projectDescription>\n+  <name>groovy</name>\n+  <comment>a high level language for the JVM.</comment>\n+  <projects>\n+  </projects>\n+  <buildSpec>\n+    <buildCommand>\n+      <name>org.eclipse.jdt.core.javabuilder</name>\n+      <arguments>\n+      </arguments>\n+    </buildCommand>\n+  </buildSpec>\n+  <natures>\n+    <nature>org.eclipse.jdt.core.javanature</nature>\n+  </natures>\n+</projectDescription>\n\\ No newline at end of file'}, {'sha': 'b8bb4ffad9ed6ace0754a2b4290a3ccc57219a14', 'filename': 'src/main/org/codehaus/groovy/ast/stmt/BreakStatement.java', 'status': 'added', 'additions': 76, 'deletions': 0, 'changes': 76, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FBreakStatement.java', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FBreakStatement.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FBreakStatement.java?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -0,0 +1,76 @@\n+/*\n+ $Id$\n+\n+ Copyright 2003 (C) James Strachan and Bob Mcwhirter. All Rights Reserved.\n+\n+ Redistribution and use of this software and associated documentation\n+ (""Software""), with or without modification, are permitted provided\n+ that the following conditions are met:\n+\n+ 1. Redistributions of source code must retain copyright\n+    statements and notices.  Redistributions must also contain a\n+    copy of this document.\n+\n+ 2. Redistributions in binary form must reproduce the\n+    above copyright notice, this list of conditions and the\n+    following disclaimer in the documentation and/or other\n+    materials provided with the distribution.\n+\n+ 3. The name ""groovy"" must not be used to endorse or promote\n+    products derived from this Software without prior written\n+    permission of The Codehaus.  For written permission,\n+    please contact info@codehaus.org.\n+\n+ 4. Products derived from this Software may not be called ""groovy""\n+    nor may ""groovy"" appear in their names without prior written\n+    permission of The Codehaus. ""groovy"" is a registered\n+    trademark of The Codehaus.\n+\n+ 5. Due credit should be given to The Codehaus -\n+    http://groovy.codehaus.org/\n+\n+ THIS SOFTWARE IS PROVIDED BY THE CODEHAUS AND CONTRIBUTORS\n+ ``AS IS\'\' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT\n+ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL\n+ THE CODEHAUS OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n+ OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+ */\n+package org.codehaus.groovy.ast.stmt;\n+\n+import org.codehaus.groovy.ast.GroovyCodeVisitor;\n+\n+\n+/**\n+ * Represents a break statement in a switch or loop statement\n+ * \n+ * @author <a href=""mailto:james@coredevelopers.net"">James Strachan</a>\n+ * @version $Revision$\n+ */\n+public class BreakStatement extends Statement {\n+\n+    private String label;\n+    \n+    public BreakStatement() {\n+        this(null);\n+    }\n+    \n+    public BreakStatement(String label) {\n+        this.label = label;\n+    }\n+    \n+    public String getLabel() {\n+        return label;\n+    }\n+\n+    public void visit(GroovyCodeVisitor visitor) {\n+        visitor.visitBreakStatement(this);\n+    }\n+}'}, {'sha': '9deb4728318df71040d6e35473d30c90f7cdb11b', 'filename': 'src/main/org/codehaus/groovy/ast/stmt/CaseStatement.java', 'status': 'modified', 'additions': 4, 'deletions': 0, 'changes': 4, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FCaseStatement.java', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FCaseStatement.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FCaseStatement.java?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -45,6 +45,7 @@ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n  */\n package org.codehaus.groovy.ast.stmt;\n \n+import org.codehaus.groovy.ast.GroovyCodeVisitor;\n import org.codehaus.groovy.ast.expr.Expression;\n \n \n@@ -72,4 +73,7 @@ public Expression getExpression() {\n         return expression;\n     }\n \n+    public void visit(GroovyCodeVisitor visitor) {\n+        visitor.visitCaseStatement(this);\n+    }\n }'}, {'sha': 'f2aab4191817b16ba2ca1ebed44d8234480756de', 'filename': 'src/main/org/codehaus/groovy/ast/stmt/ContinueStatement.java', 'status': 'added', 'additions': 76, 'deletions': 0, 'changes': 76, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FContinueStatement.java', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FContinueStatement.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FContinueStatement.java?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -0,0 +1,76 @@\n+/*\n+ $Id$\n+\n+ Copyright 2003 (C) James Strachan and Bob Mcwhirter. All Rights Reserved.\n+\n+ Redistribution and use of this software and associated documentation\n+ (""Software""), with or without modification, are permitted provided\n+ that the following conditions are met:\n+\n+ 1. Redistributions of source code must retain copyright\n+    statements and notices.  Redistributions must also contain a\n+    copy of this document.\n+\n+ 2. Redistributions in binary form must reproduce the\n+    above copyright notice, this list of conditions and the\n+    following disclaimer in the documentation and/or other\n+    materials provided with the distribution.\n+\n+ 3. The name ""groovy"" must not be used to endorse or promote\n+    products derived from this Software without prior written\n+    permission of The Codehaus.  For written permission,\n+    please contact info@codehaus.org.\n+\n+ 4. Products derived from this Software may not be called ""groovy""\n+    nor may ""groovy"" appear in their names without prior written\n+    permission of The Codehaus. ""groovy"" is a registered\n+    trademark of The Codehaus.\n+\n+ 5. Due credit should be given to The Codehaus -\n+    http://groovy.codehaus.org/\n+\n+ THIS SOFTWARE IS PROVIDED BY THE CODEHAUS AND CONTRIBUTORS\n+ ``AS IS\'\' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT\n+ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL\n+ THE CODEHAUS OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n+ OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+ */\n+package org.codehaus.groovy.ast.stmt;\n+\n+import org.codehaus.groovy.ast.GroovyCodeVisitor;\n+\n+\n+/**\n+ * Represents a continue statement in a loop statement\n+ * \n+ * @author <a href=""mailto:james@coredevelopers.net"">James Strachan</a>\n+ * @version $Revision$\n+ */\n+public class ContinueStatement extends Statement {\n+\n+    private String label;\n+    \n+    public ContinueStatement() {\n+        this(null);\n+    }\n+    \n+    public ContinueStatement(String label) {\n+        this.label = label;\n+    }\n+    \n+    public String getLabel() {\n+        return label;\n+    }\n+\n+    public void visit(GroovyCodeVisitor visitor) {\n+        visitor.visitContinueStatement(this);\n+    }\n+}'}, {'sha': 'ec636ad4afbcbdd523099bf5fa64b95b66078c40', 'filename': 'src/main/org/codehaus/groovy/ast/stmt/SwitchStatement.java', 'status': 'modified', 'additions': 8, 'deletions': 0, 'changes': 8, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FSwitchStatement.java', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FSwitchStatement.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FSwitchStatement.java?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -64,6 +64,10 @@ public class SwitchStatement extends Statement {\n     private Statement defaultStatement;\n     \n \n+    public SwitchStatement(Expression expression) {\n+        this(expression, EmptyStatement.INSTANCE);\n+    }\n+\n     public SwitchStatement(Expression expression, Statement defaultStatement) {\n         this.expression = expression;\n         this.defaultStatement = defaultStatement;\n@@ -85,6 +89,10 @@ public Statement getDefaultStatement() {\n         return defaultStatement;\n     }\n \n+    public void setDefaultStatement(Statement defaultStatement) {\n+        this.defaultStatement = defaultStatement;\n+    }\n+\n     public void addCase(CaseStatement caseStatement) {\n         caseStatements.add(caseStatement);\n     }'}, {'sha': '46fc836e5db8c924d72707a47ed94b75fd040773', 'filename': 'src/main/org/codehaus/groovy/ast/stmt/SynchronizedStatement.java', 'status': 'added', 'additions': 79, 'deletions': 0, 'changes': 79, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FSynchronizedStatement.java', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FSynchronizedStatement.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FSynchronizedStatement.java?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -0,0 +1,79 @@\n+/*\n+ $Id$\n+\n+ Copyright 2003 (C) James Strachan and Bob Mcwhirter. All Rights Reserved.\n+\n+ Redistribution and use of this software and associated documentation\n+ (""Software""), with or without modification, are permitted provided\n+ that the following conditions are met:\n+\n+ 1. Redistributions of source code must retain copyright\n+    statements and notices.  Redistributions must also contain a\n+    copy of this document.\n+\n+ 2. Redistributions in binary form must reproduce the\n+    above copyright notice, this list of conditions and the\n+    following disclaimer in the documentation and/or other\n+    materials provided with the distribution.\n+\n+ 3. The name ""groovy"" must not be used to endorse or promote\n+    products derived from this Software without prior written\n+    permission of The Codehaus.  For written permission,\n+    please contact info@codehaus.org.\n+\n+ 4. Products derived from this Software may not be called ""groovy""\n+    nor may ""groovy"" appear in their names without prior written\n+    permission of The Codehaus. ""groovy"" is a registered\n+    trademark of The Codehaus.\n+\n+ 5. Due credit should be given to The Codehaus -\n+    http://groovy.codehaus.org/\n+\n+ THIS SOFTWARE IS PROVIDED BY THE CODEHAUS AND CONTRIBUTORS\n+ ``AS IS\'\' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT\n+ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL\n+ THE CODEHAUS OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n+ OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+ */\n+package org.codehaus.groovy.ast.stmt;\n+\n+import org.codehaus.groovy.ast.GroovyCodeVisitor;\n+import org.codehaus.groovy.ast.expr.Expression;\n+\n+\n+/**\n+ * Represents a synchronized statement\n+ * \n+ * @author <a href=""mailto:james@coredevelopers.net"">James Strachan</a>\n+ * @version $Revision$\n+ */\n+public class SynchronizedStatement extends Statement {\n+\n+    private Statement code;\n+    private Expression expression;\n+    \n+    public SynchronizedStatement(Expression expression, Statement code) {\n+        this.expression = expression;\n+        this.code = code;\n+    }\n+    \n+    public Statement getCode() {\n+        return code;\n+    }\n+    \n+    public Expression getExpression() {\n+        return expression;\n+    }\n+\n+    public void visit(GroovyCodeVisitor visitor) {\n+        visitor.visitSynchronizedStatement(this);\n+    }\n+}'}, {'sha': '2f65ff35a4dccfd1e0dd7b110a2e00dd4ec5f550', 'filename': 'src/main/org/codehaus/groovy/ast/stmt/ThrowStatement.java', 'status': 'added', 'additions': 73, 'deletions': 0, 'changes': 73, 'blob_url': 'https://github.com/apache/groovy/blob/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FThrowStatement.java', 'raw_url': 'https://github.com/apache/groovy/raw/7b8480744ea6e6fb41efd4329bb470c8f3c763db/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FThrowStatement.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fast%2Fstmt%2FThrowStatement.java?ref=7b8480744ea6e6fb41efd4329bb470c8f3c763db', 'patch': '@@ -0,0 +1,73 @@\n+/*\n+ $Id$\n+\n+ Copyright 2003 (C) James Strachan and Bob Mcwhirter. All Rights Reserved.\n+\n+ Redistribution and use of this software and associated documentation\n+ (""Software""), with or without modification, are permitted provided\n+ that the following conditions are met:\n+\n+ 1. Redistributions of source code must retain copyright\n+    statements and notices.  Redistributions must also contain a\n+    copy of this document.\n+\n+ 2. Redistributions in binary form must reproduce the\n+    above copyright notice, this list of conditions and the\n+    following disclaimer in the documentation and/or other\n+    materials provided with the distribution.\n+\n+ 3. The name ""groovy"" must not be used to endorse or promote\n+    products derived from this Software without prior written\n+    permission of The Codehaus.  For written permission,\n+    please contact info@codehaus.org.\n+\n+ 4. Products derived from this Software may not be called ""groovy""\n+    nor may ""groovy"" appear in their names without prior written\n+    permission of The Codehaus. ""groovy"" is a registered\n+    trademark of The Codehaus.\n+\n+ 5. Due credit should be given to The Codehaus -\n+    http://groovy.codehaus.org/\n+\n+ THIS SOFTWARE IS PROVIDED BY THE CODEHAUS AND CONTRIBUTORS\n+ ``AS IS\'\' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT\n+ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL\n+ THE CODEHAUS OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n+ OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+ */\n+package org.codehaus.groovy.ast.stmt;\n+\n+import org.codehaus.groovy.ast.GroovyCodeVisitor;\n+import org.codehaus.groovy.ast.expr.Expression;\n+\n+\n+/**\n+ * Represents a throw statement\n+ * \n+ * @author <a href=""mailto:james@coredevelopers.net"">James Strachan</a>\n+ * @version $Revision$\n+ */\n+public class ThrowStatement extends Statement {\n+\n+    private Expression expression;\n+    \n+    public ThrowStatement(Expression expression) {\n+        this.expression = expression;\n+    }\n+    \n+    public Expression getExpression() {\n+        return expression;\n+    }\n+\n+    public void visit(GroovyCodeVisitor visitor) {\n+        visitor.visitThrowStatement(this);\n+    }\n+}'}]}"
1,192b631e7be302ecde822546ba70a9853ddbda01,"{'sha': '192b631e7be302ecde822546ba70a9853ddbda01', 'node_id': 'MDY6Q29tbWl0MzQwMzk2OTA6MTkyYjYzMWU3YmUzMDJlY2RlODIyNTQ2YmE3MGE5ODUzZGRiZGEwMQ==', 'commit': {'author': {'name': 'Boc McWhirter', 'email': 'bob@codehaus.org', 'date': '2003-09-11T16:37:42Z'}, 'committer': {'name': 'Boc McWhirter', 'email': 'bob@codehaus.org', 'date': '2003-09-11T16:37:42Z'}, 'message': 'Fixing some debug stuff.\n\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@50 a5544e8c-8a19-0410-ba12-f9af4593a198', 'tree': {'sha': 'f116f8081ba9b38ed1ec23de74a69520532cb313', 'url': 'https://api.github.com/repos/apache/groovy/git/trees/f116f8081ba9b38ed1ec23de74a69520532cb313'}, 'url': 'https://api.github.com/repos/apache/groovy/git/commits/192b631e7be302ecde822546ba70a9853ddbda01', 'comment_count': 0, 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None}}, 'url': 'https://api.github.com/repos/apache/groovy/commits/192b631e7be302ecde822546ba70a9853ddbda01', 'html_url': 'https://github.com/apache/groovy/commit/192b631e7be302ecde822546ba70a9853ddbda01', 'comments_url': 'https://api.github.com/repos/apache/groovy/commits/192b631e7be302ecde822546ba70a9853ddbda01/comments', 'author': None, 'committer': None, 'parents': [{'sha': '422e8974e233d8e687d9be6bc5f75743478980be', 'url': 'https://api.github.com/repos/apache/groovy/commits/422e8974e233d8e687d9be6bc5f75743478980be', 'html_url': 'https://github.com/apache/groovy/commit/422e8974e233d8e687d9be6bc5f75743478980be'}], 'stats': {'total': 4, 'additions': 2, 'deletions': 2}, 'files': [{'sha': '1031165753dbd2ee2442539fdf208e492d36a707', 'filename': 'src/main/org/codehaus/groovy/syntax/Token.java', 'status': 'modified', 'additions': 1, 'deletions': 1, 'changes': 2, 'blob_url': 'https://github.com/apache/groovy/blob/192b631e7be302ecde822546ba70a9853ddbda01/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fsyntax%2FToken.java', 'raw_url': 'https://github.com/apache/groovy/raw/192b631e7be302ecde822546ba70a9853ddbda01/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fsyntax%2FToken.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fsyntax%2FToken.java?ref=192b631e7be302ecde822546ba70a9853ddbda01', 'patch': '@@ -549,7 +549,7 @@ public String getDescription()\n \n     public String toString()\n     {\n-        return super.toString() + ""[text="" + this.text + "",type="" + type + ""]"";\n+        return super.toString() + ""[("" + getDescription() + "") text="" + this.text + "",type="" + type + ""]"";\n     }\n \n     // ----------------------------------------------------------------------'}, {'sha': '4e30581f04dfb856045ae4689bf3fdcb49771667', 'filename': 'src/main/org/codehaus/groovy/syntax/parser/CSTNode.java', 'status': 'modified', 'additions': 1, 'deletions': 1, 'changes': 2, 'blob_url': 'https://github.com/apache/groovy/blob/192b631e7be302ecde822546ba70a9853ddbda01/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fsyntax%2Fparser%2FCSTNode.java', 'raw_url': 'https://github.com/apache/groovy/raw/192b631e7be302ecde822546ba70a9853ddbda01/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fsyntax%2Fparser%2FCSTNode.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fsyntax%2Fparser%2FCSTNode.java?ref=192b631e7be302ecde822546ba70a9853ddbda01', 'patch': '@@ -100,6 +100,6 @@ public CSTNode[] getChildren()\n     \n     public String toString()\n     {\n-        return super.toString() + ""[token="" + token + "",children="" + children + ""]"";\n+        return ""[CSTNode [token="" + token + "",children="" + children + ""]]"";\n     }\n }'}]}"
2,0ab6465a7dece117c61c3efd3ec95d20524bdad6,"{'sha': '0ab6465a7dece117c61c3efd3ec95d20524bdad6', 'node_id': 'MDY6Q29tbWl0MzQwMzk2OTA6MGFiNjQ2NWE3ZGVjZTExN2M2MWMzZWZkM2VjOTVkMjA1MjRiZGFkNg==', 'commit': {'author': {'name': 'James Strachan', 'email': 'jastrachan@mac.com', 'date': '2003-11-24T20:09:32Z'}, 'committer': {'name': 'James Strachan', 'email': 'jastrachan@mac.com', 'date': '2003-11-24T20:09:32Z'}, 'message': 'Added support for Ruby / Python style inject method for incrementally processing each item in a list & passing the value into each closure\n\nRemoved some cruft from the todo.txt\n\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@323 a5544e8c-8a19-0410-ba12-f9af4593a198', 'tree': {'sha': '5383565784dd979ba854f54a6674d648f5b3003c', 'url': 'https://api.github.com/repos/apache/groovy/git/trees/5383565784dd979ba854f54a6674d648f5b3003c'}, 'url': 'https://api.github.com/repos/apache/groovy/git/commits/0ab6465a7dece117c61c3efd3ec95d20524bdad6', 'comment_count': 0, 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None}}, 'url': 'https://api.github.com/repos/apache/groovy/commits/0ab6465a7dece117c61c3efd3ec95d20524bdad6', 'html_url': 'https://github.com/apache/groovy/commit/0ab6465a7dece117c61c3efd3ec95d20524bdad6', 'comments_url': 'https://api.github.com/repos/apache/groovy/commits/0ab6465a7dece117c61c3efd3ec95d20524bdad6/comments', 'author': {'login': 'jstrachan', 'id': 30140, 'node_id': 'MDQ6VXNlcjMwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jstrachan', 'html_url': 'https://github.com/jstrachan', 'followers_url': 'https://api.github.com/users/jstrachan/followers', 'following_url': 'https://api.github.com/users/jstrachan/following{/other_user}', 'gists_url': 'https://api.github.com/users/jstrachan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jstrachan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jstrachan/subscriptions', 'organizations_url': 'https://api.github.com/users/jstrachan/orgs', 'repos_url': 'https://api.github.com/users/jstrachan/repos', 'events_url': 'https://api.github.com/users/jstrachan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jstrachan/received_events', 'type': 'User', 'site_admin': False}, 'committer': {'login': 'jstrachan', 'id': 30140, 'node_id': 'MDQ6VXNlcjMwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jstrachan', 'html_url': 'https://github.com/jstrachan', 'followers_url': 'https://api.github.com/users/jstrachan/followers', 'following_url': 'https://api.github.com/users/jstrachan/following{/other_user}', 'gists_url': 'https://api.github.com/users/jstrachan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jstrachan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jstrachan/subscriptions', 'organizations_url': 'https://api.github.com/users/jstrachan/orgs', 'repos_url': 'https://api.github.com/users/jstrachan/repos', 'events_url': 'https://api.github.com/users/jstrachan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jstrachan/received_events', 'type': 'User', 'site_admin': False}, 'parents': [{'sha': '01ce3536ecacac313c2792bd43013aa3852034ad', 'url': 'https://api.github.com/repos/apache/groovy/commits/01ce3536ecacac313c2792bd43013aa3852034ad', 'html_url': 'https://github.com/apache/groovy/commit/01ce3536ecacac313c2792bd43013aa3852034ad'}], 'stats': {'total': 67, 'additions': 41, 'deletions': 26}, 'files': [{'sha': '0da1fd7999757ee9a680c541210cf4c7c504282f', 'filename': 'TODO.txt', 'status': 'modified', 'additions': 15, 'deletions': 26, 'changes': 41, 'blob_url': 'https://github.com/apache/groovy/blob/0ab6465a7dece117c61c3efd3ec95d20524bdad6/TODO.txt', 'raw_url': 'https://github.com/apache/groovy/raw/0ab6465a7dece117c61c3efd3ec95d20524bdad6/TODO.txt', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/TODO.txt?ref=0ab6465a7dece117c61c3efd3ec95d20524bdad6', 'patch': '@@ -111,8 +111,6 @@ Core Groovy Tasks\n \tuse a Holder object for all local variables and pass holder\n \tinto the closure\n \n-* GroovyServlet - serves up *.groovy files\n-\n * new GroovyMethods\tto be added\n \t- Object.getMetaClass()\n \t- Object.eachProperty\n@@ -136,6 +134,16 @@ Core Groovy Tasks\n \t\tbean.setProperties(name:\'James\', location:\'London\')\n \t- some kind of Regexp iterator of strings like Ruby\'s scan\n \t- maybe support Pythons\' zip and reduce functions?\n+\t- Map.get(key, defaultValue)\n+\t- Map.setDefault(key, defaultValue) for things like\n+\t map.setDefault(key, []).add(newValue)\n+\t\n+\t- list.sortBy { [it.name, it.location] }\n+\t- list.sort { a, b | a.name <=> b.name }\n+\t\n+\tto ensure the map has a list of things\n+\n+\t\n \n \t\tmaybe add the various readonly List APIs to Object[] and *[] types\n \t\tif we ever support the DTD / Xed style type*, type+ then we can do the same\n@@ -154,7 +162,8 @@ Core Groovy Tasks\n \tbean.property - listener\n \t\n * .@ support on W3C DOM trees...\n-\n+\tthough we might wanna use @ to refer to attributes?\n+\t\n * BeanBuilder - builder which creates a tree of beans\n \tbuilder.bean(class:SomeClass, x:123, b:\'hello\') {\n \t\tnestedProperty(a:123)\n@@ -251,14 +260,6 @@ sql.table(""users"") {\n \t\t\t...\n \t\t}\n \n-* interative shell for entering commands\n-\tgroovy> x = [1, 2, 3]\n-\tgroovy> print(x)\n-\t[1, 2, 3]\n-\t\n-* allow constructors to have optional trailing closure...\n-\tnew JFrame() { text = \'hello\'; size = [1, 2] }\n-\t\t\t\n * looks like a bug on generated methods, should use param name over any field name\n \t- also it looks like there\'s various unnecessary stuff (creation of tuples) when invoking\n \tmethods\n@@ -268,15 +269,13 @@ sql.table(""users"") {\n * groovy thread...\n \tfoo = new GroovyThread(args) { closure }\n \t\n-* article\n-\t- basics of groovy\n-\t- groovy swing\n-\n * doc to write\n \t- using beans + listeners\n \t- expression language\n \n-* closure on construction of beans?\n+* allow constructors to have optional trailing closure...\n+\tnew JFrame() { text = \'hello\'; size = [1, 2] }\n+  closure on construction of beans?\n \tnew JTable() {....}\n \t\tinvokes the closure with the new object as delegate for setting properties etc\n \n@@ -295,12 +294,6 @@ sql.table(""users"") {\n \n * support for property converters, based on type\n \n-* Map.get(key, defaultValue)\n-* Map.setDefault(key, defaultValue) for things like\n-\tmap.setDefault(key, []).add(newValue)\n-\t\n-\tto ensure the map has a list of things\n-\n * maybe add python\'s * and ** for any number of args or maps in method decl\n \n * use *args in method invocation to expand a list as argument values\t\n@@ -318,8 +311,6 @@ sql.table(""users"") {\n * MetaClass.deriveMetaClass()\n \tMetaClass.addMixin(mixin)\n \n-* why does using the GroovyClassLoader cause the illegal access violation?\n-\n * constructors with map / tuple expressions, named parameter calling\n  \n * default values for parameters\n@@ -333,8 +324,6 @@ sql.table(""users"") {\n \tl = [1, 2] + [3, 4];\n \tassert l := [1, 2, 3, 4];\n \t\n-* should we implement get(String) on collection to implement nested property fetching?\n-\n * test use of overloaded setter methods & use of property notation\n   so that the use of properties within a class should use setteres / getters.\n '}, {'sha': '4c692f1920f6366abe2c5b32eb36274af1d42021', 'filename': 'src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java', 'status': 'modified', 'additions': 21, 'deletions': 0, 'changes': 21, 'blob_url': 'https://github.com/apache/groovy/blob/0ab6465a7dece117c61c3efd3ec95d20524bdad6/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fruntime%2FDefaultGroovyMethods.java', 'raw_url': 'https://github.com/apache/groovy/raw/0ab6465a7dece117c61c3efd3ec95d20524bdad6/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fruntime%2FDefaultGroovyMethods.java', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Fmain%2Forg%2Fcodehaus%2Fgroovy%2Fruntime%2FDefaultGroovyMethods.java?ref=0ab6465a7dece117c61c3efd3ec95d20524bdad6', 'patch': '@@ -400,6 +400,27 @@ public static List findAll(Map self, Closure closure) {\n         return answer;\n     }\n \n+\n+    /**\n+     * Iterates through the given collection, passing in the initial\n+     * value to the closure along with the current iterated item\n+     * then passing into the next iteration the value of the previous \n+     * closure.\n+     * \n+     * @param source\n+     * @param closure\n+     */\n+    public static Object inject(Collection self, Object value, Closure closure) {\n+        Object[] params = new Object[2];\n+        for (Iterator iter = self.iterator(); iter.hasNext();) {\n+            Object item = iter.next();\n+            params[0] = value;\n+            params[1] = item;\n+            value = closure.call(params);\n+        }\n+        return value;\n+    }\n+    \n     /**\n      * Concatenates all of the items of the collection together with the\n      * given string as a separator'}, {'sha': 'ef0923ed4a043aa69ea14dcedc9d2dcc033bdfbb', 'filename': 'src/test/groovy/ClosureMethodTest.groovy', 'status': 'modified', 'additions': 5, 'deletions': 0, 'changes': 5, 'blob_url': 'https://github.com/apache/groovy/blob/0ab6465a7dece117c61c3efd3ec95d20524bdad6/src%2Ftest%2Fgroovy%2FClosureMethodTest.groovy', 'raw_url': 'https://github.com/apache/groovy/raw/0ab6465a7dece117c61c3efd3ec95d20524bdad6/src%2Ftest%2Fgroovy%2FClosureMethodTest.groovy', 'contents_url': 'https://api.github.com/repos/apache/groovy/contents/src%2Ftest%2Fgroovy%2FClosureMethodTest.groovy?ref=0ab6465a7dece117c61c3efd3ec95d20524bdad6', 'patch': '@@ -129,6 +129,11 @@ class ClosureMethodTest extends GroovyTestCase {\n         assert value == [4, 3, 2, 1]\n     }\n     \n+    void testListInject() {\n+        value = [1, 2, 3].inject(\'counting: \') { str, item | str + item }\n+        assert value == ""counting: 123""\n+    }\n+    \n     void testInspect() {\n         text = inspect()\n         println(text)'}]}"
